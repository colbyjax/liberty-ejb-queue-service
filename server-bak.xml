<server description="new server">

    <!-- Enable features -->
    <featureManager>
        <feature>javaee-7.0</feature>
    	<feature>wasJmsServer-1.0</feature>
		<feature>wasJmsClient-2.0</feature>
		<feature>jndi-1.0</feature>
		<feature>mdb-3.2</feature>
	    <feature>localConnector-1.0</feature>
    	<feature>jaxrs-2.0</feature>
	</featureManager>

	<!-- This template enables security. To get the full use of all the capabilities, a keystore and user registry are required. -->
	
	<!-- For the keystore, default keys are generated and stored in a keystore. To provide the keystore password, generate an 
	     encoded password using bin/securityUtility encode and add it below in the password attribute of the keyStore element. 
	     Then uncomment the keyStore element. -->
	<!--
	<keyStore password=""/> 
	-->
	
	<!--For a user registry configuration, configure your user registry. For example, configure a basic user registry using the
	    basicRegistry element. Specify your own user name below in the name attribute of the user element. For the password, 
	    generate an encoded password using bin/securityUtility encode and add it in the password attribute of the user element. 
	    Then uncomment the user element. -->
	<basicRegistry id="basic" realm="BasicRealm"> 
		<!-- <user name="yourUserName" password="" />  --> 
	</basicRegistry>
    
    <!-- To access this server from a remote client add a host attribute to the following element, e.g. host="*" -->
    <httpEndpoint httpPort="9080" httpsPort="9443" id="defaultHttpEndpoint"/>

    <!-- BEGINNING OF CHANGES -->
    <!-- Removed Keystore information since being shared in source control -->
    <keyStore id="defaultKeyStore" password="XXXREMOVEDXXX"/>

    <basicRegistry id="basic" realm="BasicRealm">
        <user name="XXXREMOVEDXXX" password="XXXREMOVEDXXX"/>
    </basicRegistry>
    <!-- END OF CHANGES -->
    
    <messagingEngine>
    	<queue forceReliability="ReliablePersistent" id="libertyQ"/>
    </messagingEngine>
    <jmsQueueConnectionFactory jndiName="jms/libertyQCF" id="jms/libertyQCF">
	     <properties.wasJms nonPersistentMapping="ExpressNonPersistent" persistentMapping="ReliablePersistent"/> 
    </jmsQueueConnectionFactory>
    <jmsQueue id="jms/libertyQue" jndiName="jms/libertyQue">
    	<properties.wasJms deliveryMode="Application" priority="1" queueName="libertyQ" readAhead="AsConnection" timeToLive="500000"/>
    </jmsQueue>
    <jmsActivationSpec id="HelloLibertyEAR/HelloLiberty/HelloMDB">
    	<properties.wasJms destinationRef="jms/libertyQue"/>
    </jmsActivationSpec>

    <applicationMonitor updateTrigger="mbean"/>

    <enterpriseApplication id="HelloLibertyEAR" location="HelloLibertyEAR.ear" name="HelloLibertyEAR"/>
</server>